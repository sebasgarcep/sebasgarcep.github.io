<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://sebasgarcep.github.io/</id><title>Sebastian Garrido</title><subtitle>A blog by Sebastian Garrido - Data Engineer.</subtitle> <updated>2024-10-08T22:24:03-05:00</updated> <author> <name>Sebastian Garrido</name> <uri>https://sebasgarcep.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://sebasgarcep.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://sebasgarcep.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2024 Sebastian Garrido </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Understanding the Kalman Filter</title><link href="https://sebasgarcep.github.io/posts/kalman-filter-tutorial/" rel="alternate" type="text/html" title="Understanding the Kalman Filter" /><published>2022-01-08T00:00:00-05:00</published> <updated>2022-01-08T00:00:00-05:00</updated> <id>https://sebasgarcep.github.io/posts/kalman-filter-tutorial/</id> <content src="https://sebasgarcep.github.io/posts/kalman-filter-tutorial/" /> <author> <name>Sebastian Garrido</name> </author> <summary> Society depends on having correct estimates of what may happen. Whether it is the climate or traffic, humans have built models of reality which help us make better decisions. But any model is bound to have a margin of error with respect to reality, and as time passes the model will diverge from reality. To prevent this we would like to integrate observations from reality into the model from tim... </summary> </entry> <entry><title>Writing a React Native App using Expo and Google Social Login</title><link href="https://sebasgarcep.github.io/posts/social-login-app/" rel="alternate" type="text/html" title="Writing a React Native App using Expo and Google Social Login" /><published>2022-01-03T00:00:00-05:00</published> <updated>2022-01-03T00:00:00-05:00</updated> <id>https://sebasgarcep.github.io/posts/social-login-app/</id> <content src="https://sebasgarcep.github.io/posts/social-login-app/" /> <author> <name>Sebastian Garrido</name> </author> <summary> This will be a brief tutorial on how to write a React Native application, using Expo, that implements Social Authentication, using Google. We will use ExpressJS and Passport in the backend to manage the authentication process. We will assume that the reader is already comfortable with React Native and Express and that they are also proficient with Typescript. Designing the Application Our cli... </summary> </entry> <entry><title>Counting Primes Really Fast</title><link href="https://sebasgarcep.github.io/posts/counting-primes-really-fast/" rel="alternate" type="text/html" title="Counting Primes Really Fast" /><published>2021-06-28T00:00:00-05:00</published> <updated>2022-01-04T10:57:46-05:00</updated> <id>https://sebasgarcep.github.io/posts/counting-primes-really-fast/</id> <content src="https://sebasgarcep.github.io/posts/counting-primes-really-fast/" /> <author> <name>Sebastian Garrido</name> </author> <summary> Suppose you are given a very large number, for example $n = 10^{12}$, and you wish to know how many numbers equal to or less than $n$ are prime. This is the prime counting function, normally denotes as $\pi(n)$. In this article we will explore some of the methods to efficiently calculate $\pi(n)$, and we will benchmark each in Rust. Checking every number up to $n$ for primality Let’s write a ... </summary> </entry> <entry><title>From Zero to Data-Ready (Part 4): Building Analytics Dashboards using CubeJS and React</title><link href="https://sebasgarcep.github.io/posts/from-zero-to-data-ready-part-4/" rel="alternate" type="text/html" title="From Zero to Data-Ready (Part 4): Building Analytics Dashboards using CubeJS and React" /><published>2021-06-18T00:00:00-05:00</published> <updated>2022-01-04T23:08:51-05:00</updated> <id>https://sebasgarcep.github.io/posts/from-zero-to-data-ready-part-4/</id> <content src="https://sebasgarcep.github.io/posts/from-zero-to-data-ready-part-4/" /> <author> <name>Sebastian Garrido</name> </author> <summary> In Part 3 we wrote our ETLs using Python and TDD. In this post we will focus on building an analytics platform for the company using CubeJS. What is CubeJS ? CubeJS is a tool that serves as a backend for data analytics. If one has a data warehouse and a dashboard then CubeJS can serve as an intermediary between both. All it requires is a data model definition. With just this we can build decl... </summary> </entry> <entry><title>From Zero to Data-Ready (Part 3): Writing Test Driven ETLs using Python</title><link href="https://sebasgarcep.github.io/posts/from-zero-to-data-ready-part-3/" rel="alternate" type="text/html" title="From Zero to Data-Ready (Part 3): Writing Test Driven ETLs using Python" /><published>2021-06-01T00:00:00-05:00</published> <updated>2022-01-04T23:08:51-05:00</updated> <id>https://sebasgarcep.github.io/posts/from-zero-to-data-ready-part-3/</id> <content src="https://sebasgarcep.github.io/posts/from-zero-to-data-ready-part-3/" /> <author> <name>Sebastian Garrido</name> </author> <summary> In Part 2 we created a data warehouse using sqitch. In this post we will focus on creating ETLs for our data. We will build our ETLs using Python under a Test Driven Development paradigm. Testing our Data Pipelines Test Driven Development is a programming paradigm that emphasizes writing tests for each of the important aspects of our application before we even write the first line of code. Th... </summary> </entry> </feed>
